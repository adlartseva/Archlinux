##################################
## PKGBUILD - создание (пример) ##
##################################
## Пример ##
############

$ cp /usr/share/pacman/PKGBUILD.proto PKGBUILD  # скопируем шаблон PKGBUILD

$ nano PKGBUILD  # отредактирум файл

	 source=("https://sourceforge.net/projects/systemback/files/1.8/systemback_1.8.402_source.tar.xz/download")  # десь пишем адресс скачивания файла (массив имен файлов, необходимых для сборки пакета. он должен содержать месторасположение исходных файлов программы, которым в большинстве случаев является полный HTTP или FTP-адрес)

	 pkgname=systemback  # пишем имя файла

	 pkgver=1.8.402  # пишем версию файла

	 epoch=  # удаляем (используется для того, чтобы версия пакета принудительно воспринималась как наиболее свежая по сравнению со всеми другими версиями)

	 pkgdesc="Simple system backup and restore"  # пишем описание файла

	 arch=("any")  # пишем версию архитектуры

	 url="https://sourceforge.net/projects/systemback/files/1.8/"  # пишем адресс (адрес официального сайта упаковываемого программного обеспечения)

	 groups=()  # удаляем (группа, к которой принадлежит пакет)

	 depends=()  # удаляем (Массив имен пакетов, которые должны быть установлены для запуска программы из данномо пакета. т.е. зависимости)

	 makedepends=()  # удаляем (массив имен пакетов, которые должны быть установлены лишь для сборки пакета, но не нужны для использования программы после установки)

	 noextract=()  # удаляем (массив имен файлов, указанных в source, которые не должны быть распакованы командой makepkg)

	 validpgpkeys=()  # удаляем

	 backup=()  # удаляем (массив имен файлов, которые могут содержать изменения, сделанные пользователем, и должны быть сохранены в процессе обновления или удаления пакета)
	 
	 options=()  # удаляем (этот массив позволяет вам изменить стандартное поведение makepkg, указанное в /etc/makepkg.conf)

	 replaces=()  # удаляем (список пакетов, которые заменит собираемый пакет)

	 conflicts=()  # удаляем (список пакетов, которые, если установлены, могут создать проблемы во время использования собираемого пакета)

	 provides=()  # удаляем (список пакетов, необходимость в которых пропадает, так как собираемый пакет выполняет, по крайней мере, похожие функции)

	 prepare() {
		cd "$pkgname-$pkgver"
		patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
	}                              # удаляем

	 check() {
		cd "$pkgname-$pkgver"
		make -k check
	}                              # удаляем


$ makepkg -g  # узнаем md5sums и пропишем её

$ makepkg -g >> PKGBUILD  # эта команда пропишет в файл PKGBUILD md5sums останится только перенести в нужную строчку

$ makepkg -o  # распаковывает файл

$ makepkg -s  # собирем в формат tar.xz

$ sudo pacman -U название_файла.tar.xz  # установим в систему

