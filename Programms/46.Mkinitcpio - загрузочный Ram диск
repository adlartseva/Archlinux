#######################################
## Mkinitcpio - загрузочный Ram диск ##
#######################################

# cd /boot/  # здесь хранятся все ядра

    initramfs-linux.img  # образ сгенерированный после умтановки или обновления яда. Создается с хуком auodetect. Хук autodetect обнаруживает нужные модули необходимые для оборудования и включает их в initramfs.

    initramfs-linux-fallback.img  # образ сгенерированный после умтановки или обновления яда. Fallback образ создается с точно таким же конфигурационным файлом за исключением хука autodetect, что позволяет включить в него все модули

# mkinitcpio -p linux  # команда обновления конфигурационного RAM диска


################
## Переменные ##
################

# nano /etc/mkinitcpio.conf  # рассмотрим переменные

  MODULES  # модули ядра, которые будут загружены до выполнения хуков. Указывает какие модули ядра должны быть загружены прежде чем что-либо будет сделано. Для модулей с суффиксом ? не будет выводиться ошибка, если они не будут найдены. Это может быть полезно для пользовательских ядер.

  BINARIES  # дополнительные исполняемые файлы, которые необходимо включить в initramfs. Указывают какие файлы необходимо добавить в initramfs. BINARIES и FILES будут добавлены до запуска хуков и использоваться для переопределения файлов использаемых хуками. BINARIES - бинарные файлы из PATH, необходимые для работы библиотеки будут автоматически добавлены. FILES добавляет файлы как есть. проверяет зависимости от библиотек
  
  FILES  # дополнительные файлы, которые необходимо включить в initramfs. просто копирует файлы
  
  HOOKS  # hooks - скрипты, выполняемые в initramfs. Параметр HOOKS наиболее важный в файле настроек. Хуки - это небольшие скрипты, которые описывают что будет добавлено к образу, а также дополнительные действия, выполняемые при загрузке системы. Хуки указываются по имени и выполняются по порядку

    # cd /usr/lib/initcpio/install/  # все хуки находятся здесь

    # mkinitcpio -L  # команда для получения списка всех доступных хуков

    # mkinitcpio -H название_хука  # команда для вывода инфо о конкретном хуке
  
  COMPRESSION  # тип используемого сжатия initramfs.
  
  COMPRESSION_OPTIONS  # дополнительные опции архиваторов. Использование этого параметра не рекомендуется. mkinitcpio будет обрабатывать особые требования к архиваторам (например --check=crc32 для xz), что может привести к невозможности запуска системы.     


###########
## HOOKS ##
###########

base  #	При устновке: Устанавливает все начальные каталоги, базовые утилиты и библиотеки. Всегда ставьте этот хук первым, за исключением случаев, когда вы действительно знаете, что делаете.

systemd	 # При установке: Запуск systemd в initramfs. Замена хукам base, usr и udev. Несовместим с некоторыми хуками (например encryption). Необходимо использовать аналоги с префиксом "sd-*".

btrfs  # При установке: Включает необходимые модули для использования Btrfs в качестве корневой файловой системы. Во время выполнения: Запуск btrfs device scan для сборки нескольких устройств Btrfs в корневую файловую систему при отсутвии хука udev.

udev  # При установке: Добавляет udev в образ ram-диска	Во время выполнения: Udev автоматически создает файл устройства для корня и загружает необходимые модули для его работы. Рекомендуется использовать

autodetect  # При установке: Уменьшает размер initramfs пытаясь определить какие модули вам нужны. Проверьте список модулей которые он добавил. Он должен запускаться раньше других подсистем. Все обработчики выполняемые до него будут включать все модули.

modconf  # При установке:	Добавляет конфигурационные файлы modprobe /etc/modprobe.d и /usr/lib/modprobe.d	

block  # При установке: Добавляет все модули блочных устройств, ранее предоставляемые другими хуками (fw, mmc, pata, sata, scsi, usb, virtio).

pcmcia  # При установке: Добавляет pcmcia модули. Требует наличия pcmciautils. Во время выполнения:	Загружает модули pcmcia.

net  # При установке: Добавляет поддержку сети. Для PCMCIA устройств добавьте хук pcmcia. Во время выполнения: Требуется для корневой файловой системы через NFS.

dmraid  # При установке: Поддержка корневой файловой системы на fakeRAID массивах. Необходимо установить пакет dmraid. Обратите внимание, что необходимо использовать mdadm с хуком mdadm_udev с fakeRAID если ваш контроллер поддерживает это.	Во время выполнения: Находит и монтирует fakeRAID блочные устройства используя dmraid.

mdadm  # При установке: Обеспечивает поддержку для сборки RAID массивов из /etc/mdadm.conf, или автоопределеним во время загрузки. Необходимо установить пакет mdadm. Вместо этого хука предпочтительнее использовать хук mdadm_udev . Во время выполнения:	Находит и собирает программные RAID блочные устройства с помощью mdassemble.

mdadm_udev  # При установке: Обеспечивает поддержку для сборки RAID массивов с помощью udev. Необходимо установить пакет mdadm. Если вы используете этот крючок с массивом FakeRAID, рекомендуется включить mdmon в секции BINARIES и добавить хук shutdown чтобы избежать восстановления массива при перезагрузке.	 Во время выполнения: Находит и собирает программные RAID блочные устройства с помощь udev и mdadm.Это предпочтительный метод использования mdadm (заменяет хук mdadm).

keyboard  #	При установке: Добавляет модули необходимые для работы клавиатур. Используйте этот хук, если необходимо использовать USB клавиатуру на ранней стадии загрузки (в initramfs)

keymap  # При установке: Добавляет в initramfs раскладки указанные /etc/vconsole.conf. Во время выполнения:	Загружает раскладки указанные в /etc/vconsole.conf.

consolefont  # При установке: Добавляет в initramfs консольный шрифт указанный /etc/vconsole.conf. Во время выполнения:	Загружает шрифт указанный в /etc/vconsole.conf.

sd-vconsole  # При установке:	Добавляет в initramfs раскладки и консольный шрифт указанные в /etc/vconsole.conf. Используется с хуком systemd. Во время выполнения:  Загружает раскладки и шрифт указанные в /etc/vconsole.conf.

encrypt  # При установке: Добавляет dm-crypt модуль и программу cryptsetup. Требует установленный пакет cryptsetup.	Во время выполнения: Определяет и разблокирует зашифрованый корневой раздел. 

sd-encrypt  # При установке: Позволяет шифровать корневую файловую систему в initramfs с хуком systemd.

lvm2  # # При установке: Добавляет поддержку lvm. Требует установленного пакета lvm2. Во время выполнения: Включает поддержку lvm.

fsck  # При установке: Добавляет исполняемый вайл fsck и необходимые обработчики файловых систем. Если стоит после хука autodetect, то будут добавлены только обработчики для Вашей корневой файловой системы. Использование этого крючка настоятельно рекомендуется и обязательно с отдельным /usr разделом. Во время выполнения: Запускает fsck для корневой файловой системы (и раздела /usr) до монтирования.

resume  # Во время выполнения: Необходим для работы спящего режима (suspend to disk). Работает с swsusp и TuxOnIce. См. Hibernation. Работает только совместно с хуком base. Хук systemd использует свои механизмы resume.

filesystems  # При установке: Включает в образ модули необходимых файловых систем. Этот хук обязателен, если Вы не указываете модули файловых систем в MODULES.

shutdown  # При установке: Переход в initramfs при выключении. 	 Во время выполнения: Размонтирование и отключение устройств при выключении.

usr  # При установке: Добавляет поддержку отделного /usr раздела. Во время выполнения: Монтирует раздел /usr после монтирования корневой файловой системы.

##########################################################################################################################################
## COMPRESSION ##
##################

# Ядро поддерживает несколько форматов для сжатия initramfs - Gzip , bzip2 , LZMA, XZ (также известный как LZMA2), LZO и LZ4 . Для большинства случаев использования, GZIP, lzop и LZ4 обеспечивает лучший баланс сжатого размера изображения и скорости декомпрессии.

		COMPRESSION="gzip"
		COMPRESSION="bzip2
		COMPRESSION="lzma"
		COMPRESSION="lzop"
		COMPRESSION="xz"
		COMPRESSION="lz4"

################################################################
## Извлечение образа ##
#######################

# Если вы хотите знать, что находится внутри INITRD изображения, вы можете извлечь его и тыкать в файлы внутри него.

# lsinitcpio /boot/initramfs-linux.img  # просмотреть список файлов внутри образа

# lsinitcpio -х /boot/initramfs-linux.img  # выполним команду  чтобы извлечь их все в текущем каталоге



################################################################

# nano /etc/mkinitcpio.d/linux.preset  # здесь можно изменить настройки образов. ОСТОРОЖНО! Эти .preset файлы также будут использованы при обновлении ядра, не испортите их!

################################################################
## Создание образов ##
######################
## Вручную ##
#############

# mkinitcpio -c /etc/mkinitcpio-custom.conf -g /boot/linux-custom.img  # таким образом можно вручную создать образ и потираться с ним.

# cd /usr/lib/modules/  # версии всх ядер можно посмотреть здесь

# mkinitcpio -g /boot/linux.img -k 3.3.0-ARCH  # Так можно создать образ с ядром отличным от загруженного.

# mkinitcpio -g /boot/kernel26.img  # эта команда создаст образ для текущего ядра в файле /boot/kernel26.img, который является образом для ядра из пакета kernel26


###################################
## Перегенерация fallback-образа ##
###################################

# mkinitcpio -c /boot/mkinitcpio.d/kernel26-fallback.conf -g /boot/kernel26.img  # Fallback образ должен быть уже создан если вы установили kernel26, но в случае если вы хотите его пересоздать используйте эту команду

##############

После модифицирования созданного ядра добавим его в загрузку. См. 3.2.Оптимизация загрузки системы

###############













