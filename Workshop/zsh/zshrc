# history
HISTFILE=~/.zsh_history
HISTSIZE=500000
SAVEHIST=500000

# autocomplit
autoload -U compinit
compinit
zstyle ':completion:*' max-errors 2

# promptinit
autoload -U promptinit
promptinit

# colors
autoload -U colors
colors

# autocd
setopt autocd

# append history
setopt APPEND_HISTORY

# ignore dups in history
setopt HIST_IGNORE_ALL_DUPS
# ighore additional space in history
setopt HIST_IGNORE_SPACE
# reduce blanks in history
setopt HIST_REDUCE_BLANKS
# disable beeps
unsetopt beep

# pkgfile
source /usr/share/doc/pkgfile/command-not-found.zsh

zmodload zsh/complist
zstyle ':completion:*' menu yes select

precmd () {
function git_promt {
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi

  resultat=$(git status --porcelain 2>/dev/null)
  GIT_DIRTY='%{\e[1;32m%}'
  [[ -n $resultat ]] && GIT_DIRTY='%{\e[1;31m%}'

  git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
  echo '%{\e[1;37m%}[git: '$GIT_DIRTY$git_branch'%{\e[1;37m%}]%{\e[0m%}'

}

  function batcharge {
    bat_perc=`acpi | awk {'print $4;'} | sed -e "s/\s//" -e "s/%.*//"`
    if [[ $bat_perc < 15 ]]; then
      col='%{\e[1;31m%}'
    elif [[ $bat_perc < 50 ]]; then
      col='%{\e[1;33m%}'
    else
      col='%{\e[1;32m%}'
    fi
    echo '%{\e[1;37m%}['$col$bat_perc'%{\e[1;37m%}%%]%{\e[0m%}'
  }

RPROMPT=$(git_promt)$' %{\e[1;37m%}[%{\e[1;36m%}%T%{\e[1;37m%}]%{\e[0m%} '$(batcharge)
}

# highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
# brackets
ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=yellow,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=magenta,bold'
# cursor
#ZSH_HIGHLIGHT_STYLES[cursor]='bg=blue'
# main
# default
ZSH_HIGHLIGHT_STYLES[default]='none'                                 # стандартный цвет
# unknown
ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red'                         # неизвестная команда
# command
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=magenta,bold'                # зарезервированное слово
ZSH_HIGHLIGHT_STYLES[alias]='fg=white,bold','bg=blue'                         # алиас
ZSH_HIGHLIGHT_STYLES[builtin]='fg=green,bold'                        # built-in функция (например, echo)
ZSH_HIGHLIGHT_STYLES[function]='fg=green,bold'                       # функция, определенная в шелле
ZSH_HIGHLIGHT_STYLES[command]='fg=green'                             # обычная команда
ZSH_HIGHLIGHT_STYLES[precommand]='fg=blue,bold'                      # пре-команда (например, sudo в sudo cp ...)
ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=yellow'                   # разделитель команд, && || ;
ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green'                      # команда, найденная в путях (hashed)
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=blue,bold'            # флаги типа -*
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=blue,bold'            # флаги типа --*
# path
ZSH_HIGHLIGHT_STYLES[path]='fg=cyan,bold'                            # станлартный путь
ZSH_HIGHLIGHT_STYLES[path_prefix]='fg=cyan'                          # префикс пути
ZSH_HIGHLIGHT_STYLES[path_approx]='fg=cyan'                          # примерный путь
# shell
ZSH_HIGHLIGHT_STYLES[globbing]='fg=cyan'                             # шаблон (например, /dev/sda*)
ZSH_HIGHLIGHT_STYLES[history-expansion]='fg=blue'                    # подстановка из истории (команда, начинающаяся с !)
ZSH_HIGHLIGHT_STYLES[assign]='fg=magenta'                            # присвоение
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]='fg=cyan'        # конструкции типа "$VARIABLE"
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]='fg=cyan'          # конструкции типа \"
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]='fg=blue'                 # конструкции типа `command`
# quotes
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=yellow,underline'   # конструкции типа 'text'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=yellow'             # конструкции типа "text"
# pattern
ZSH_HIGHLIGHT_PATTERNS+=('sudo' 'fg=white,bold,bg=red')
# root
#ZSH_HIGHLIGHT_STYLES[root]='bg=red'

# bindkeys
bindkey '^[[A'  up-line-or-search               # up arrow for back-history-search
bindkey '^[[B'  down-line-or-search             # down arrow for fwd-history-search
bindkey '^[[H' beginning-of-line               # home
bindkey '\e[2~' overwrite-mode                  # insert
bindkey '\e[3~' delete-char                     # del
bindkey '^[[F' end-of-line                     # end
bindkey '\e[5~' up-line-or-history              # page-up
bindkey '\e[6~' down-line-or-history            # page-down

# PROMPT && RPROMPT
if [[ $EUID == 0 ]]; then
  PROMPT="%{$fg_bold[red]%}---------[%{$fg_bold[white]%}%~%{$fg_bold[red]%}]
%{$fg_bold[white]%}»%{$reset_color%} "
else
  PROMPT="%{$fg_bold[yellow]%}---------[%~]
%{$fg_bold[white]%}»%{$reset_color%} "
fi

alias sudo='sudo '
alias cp='cp -r'
alias rm='rm -r'
alias la='ls -la --color=auto'
alias grep='grep --color=auto'
alias ping='ping -c 3'
alias repos='cd ~/data/repos'
alias pa='ps -aux | grep'

alias yas='yaourt -S'
alias yar='yaourt -Rsn'
alias yasy='yaourt -Sy'
alias yay='yaourt -Syua'
alias yass='yaourt -Ss'
alias yaqs='yaourt -Qs'
alias yaqu='yaourt -Qu'
alias yasi='yaourt -Si'
alias yaqi='yaourt -Qi'
alias yau='yaourt -U'
alias yac='yaourt -C'

alias status='git status'
alias add='git add'
alias cancel='git checkout --'
alias pull='git pull'
alias push='git push'
alias diff='git diff'
alias tree='git fetch && git checkout'
alias log='git log'
alias commit='git commit -m'
alias branch='git branch'
alias newbranch='git checkout -b'
alias merge='git merge'

if [[ $EUID == 0 ]]; then
  alias sctl='systemctl'
else
  alias sctl='sudo systemctl'
fi

screenfetch
up=$(pacman -Qu) && notify-send -h string:up:$up -i 'emblem-ubuntuone-updating' 'Updates available:' $up
up=$(pacman -Qu) && [[ $(echo $up | wc -l) -gt 0 ]] && echo "\e[1;36m
Updates available:\e[1;37m
"$up
