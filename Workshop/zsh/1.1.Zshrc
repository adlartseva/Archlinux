###########
## Zshrc ##
###########

$ source ~/.zshrc  # после любых изменений файла /zshrc перезагружаем shell

$ sort -t ";" -k 2 -u ~/.zsh_history | sort -o ~/.zsh_history  # освободить историю от уже созданных дубликатов.

$ source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh  # добавить в конец .zshrc

export PATH="\$PATH:\$USER/bin"  # вставить в конфиг. Путь до папке со скриптами

################

bindkey -e  # она больше для проформы. В указанном виде лишь подтверждает умолчальное стремление оболочки вести себя при навигации и редактировании подобно Emacs'у (а не vi).


#################  ??????

zstyle ':completion:*' completer _expand _complete _ignored
zstyle ':completion:*' group-name ''
# показать цвета Ls стиле на файл доработок
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'
zstyle ':completion:*' max-errors 1
# отчет позиции , когда автозаполнения списков больше , чем доступный экран 
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle :compinstall filename '/home/bosha/.zsh/.zshrc'
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

##########
## P.S. ##
##########

Первая строка для рута (if true), вторая для других пользователей (if false). $fg - цвет текста, $bg - цвет фона. Дополнения _bold и _no_bold регулируют оттенок. Обратите внимание на бэкслеш в конце каждой строки (чтобы не переносилось). Сбросить цвета ($reset_color) нужно для регулирования оттенков. Команды (например, установку цвета) нужно обрамлять в %{ ... %}, чтобы не отображалось. Доступные цвета:

  black
  red
  green
  yellow
  blue
  magenta
  cyan
  white

Список переменных для promt'ов:

	%n - имя пользователя
	%m - хостнейм
	%M - хостнейм
	%l - текущая tty
	%? - код возврата предыдущего приложения
	%# - # для рута и % для обычных пользователей
	%T - время (HH:MM)
	%* - время (HH:MM:SS)
	%D - дата (YY-MM-DD)
	%~ - текущая директория, хомяк будет заменен на ~
	%d - то же, но без замены
	%1/ - то же, но только последняя директория  

##########
## P.S. ##
##########

precmd - показывает, что вот этот кусок нужно каждый раз (к каждому новому приглашению) вычислять. Функция сама по себе довольная простая - определили заряд, подставили цвет, добавили к часам еще и заряд (скрин о5 же, ниже). С returncode немного магии. Конструкции $(if.true.false) в zsh есть условный оператор. Если код возврата true (равен 0), то ставим цвет зеленый, иначе - красный.

Конструкции типа %{\e[1;37m%} - начало цвета, {\e[0m%} - конец цвета. Цвета задаются так: модификатор;цвет;фон. Цифры для них приведены ниже:

	0 обычные цвета
	1 яркие цвета
	3 наклонный
	4 подчеркнутый
	5 мигающий
	30 черный
	31 красный
	32 зеленый
	33 желтый
	34 синий
	35 фиолетовый
	36 циановый
	37 белый
	40 черный фон
	41 красный фон
	42 зеленый фон
	43 желтый фон
	44 синий фон
	45 фиолетовый фон
	46 циановый фон
	47 белый фон

#################
## P.S. Yaourt ##
#################

export YAOURT_COLORS="no=0:nb=1:pkg=1;34:ver=0;32:lver=1;32:installed=0;36:grp=1;34:od=0;36:votes=0;35:dsc=0:other=0;35:testing=1;31:core=0;31:extra=0;32:xyne-any=0;36:community=0;36:aur=0;36"

no  # без цвета/дефолтный цвет (по умолчанию 0)

nb  # номер при поиски вида yaourt pkgname (по умолчанию 1;33;7)

pkg  # имя пакета (по умолчанию 1)

ver  # версия пакета (по умолчанию 1;32)

lver  # версия установленного пакета (по умолчанию 1;31;7)

installed  # цвет текста [installed] (по умолчанию 1;33;7). 

grp  # имя группы. (по умолчанию 1;34)

od  # статус устаревших пакетов (по умолчанию 1;33;7)

votes  # количество голосов (по умолчанию 1;33;7)

dsc  # описание. (по умолчанию 0)

core, extra, xyne-any, community, aur  # имена репозиториев

other  # остальные репозитории не указанные точно (по умолчанию 1;35)

#######################################
## добавить непосредственно в .zshrc ##
#######################################

# Загрузка пользовательских настроек от $ HOME / .zsh
# в файле .zsh-plugins находится список файлов в папке .zsh
# в папке .zsh находятся разбитые по файлам настройки zsh
if [[ -a ${HOME}/.zsh-plugins ]]; then
    for _SRC in $(cat "${HOME}/.zsh-plugins"); do source "${HOME}/.zsh/${_SRC}"; done
fi

# вариант по проще
ZDOTDIR=~/.zsh
# Загрузка пользовательских настроек:
for rc in $ZDOTDIR/*.sh
do
    source $rc
done
unset rc


#########################
## .zshenv - настройка ##
#########################

# настройка переменной $PATH
typeset -U path
path=(~/bin /other/things/in/path $path[@])


#############
##.zlogout ##
#############

clear